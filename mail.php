<?php
// Settings to use, when sending via Google's Gmail servers

// Vendor folder and the vendor/autoload.php script are generated by Composer; they are not part of PHPMailer.
require 'vendor/autoload.php';

// Import PHPMailer classes into the global namespace
use PHPMailer\PHPMailer\PHPMailer;

//Create a new PHPMailer instance
$mail = new PHPMailer;

//Tell PHPMailer to use SMTP
$mail->isSMTP();

$mail->CharSet = 'utf-8';

//Enable SMTP debugging
// 0 = off (for production use)
// 1 = client messages
// 2 = client and server messages
// $mail->SMTPDebug = 2;
$mail->SMTPDebug = 0;

//Set the hostname of the mail server
$mail->Host = 'smtp.gmail.com';
// use
// $mail->Host = gethostbyname('smtp.gmail.com');
// if your network does not support SMTP over IPv6

//Set the SMTP port number - 587 for authenticated TLS, a.k.a RFC4409 SMTP submission
$mail->Port = 587;

//Set the encryption system to use - ssl (deprecated) or tls
$mail->SMTPSecure = 'tls';

//Wether to use SMTP authentication
$mail->SMTPAuth = true;

if (file_exists('partiels/mdp.php')) {
		include 'partiels/mdp.php';
} else {
	//Username to use for SMTP authentication — use full email address for gmail
	$mail->Username = getenv('Username');
	//Password to use for SMTP authentication
	$mail->Password = getenv('Password');
	unset($password);
 	//The unset line of code is putting the $password variable back to null which means it exists only long enough to be passed to the mail object and no longer.
}


// Adresse mail expéditeur = le site
$mail->setFrom('challengesbecode@gmail.com', "La Chomhier AID");

//Set an alternative reply-to address // Reply to = Mail expéditeur = site
$mail->addReplyTo('challengesbecode@gmail.com', "La Chomhier AID");

// Mail de l'utilisateur
// an address to which the e-mail will be sent. You must use a valid e-mail here so that you can verify that your PHPMailer test worked. Just your own e-mail address here for this test. As with the setFrom method, you may optionally provide a display name for the recipient.
//Set who the message is to be sent to // L'entreprise Le site
$mail->addAddress($emailValide, $nomNettoye . " " . $prenomNettoye); 

//Set the subject line
$mail->Subject = 'Formulaire de contact';

$body = '
	<html>
		<head>
			<style>
				p.gras, .gras {
					font-weight: bold;
				}
				table {
					border: black solid 1px;
					width: 80vw;
				}
			</style>
		</head>
		<body>
			<p class="gras">Bonjour ' . $genreNettoye . ' '. $nomNettoye . ' ' . $prenomNettoye . '</b>,<br/>Veuillez trouver ci-dessous le récapitulatif de votre <u>formulaire de contact</u>.</p>
			<table>
				<tr>
					<td class="gras">Votre adresse mail:</td>
				</tr>
				<tr>
					<td>' . $emailValide . '</td>
				</tr>
				<tr>
					<td class="gras">Objet de votre formulaire:</td>
				</tr>
				<tr>
					<td>' . $objetNettoye . '</td>
				</tr>
				<tr>	
					<td class="gras">Votre message:</td>
				</tr>
				<tr>	
					<td>' . $messageNettoye . '</td>
				</tr>
				<tr>	
					<td class="gras">Le nom de votre fichier:</td>
				</tr>
				<tr>	
					<td>' . $titreFicNettoye . '</td>
				</tr>	
			</table>
			<p>Nous vous remercions de votre visite sur notre site et espérons vous revoir très bientôt dans nos locaux.<br/>Cordialement,<br/>LaChomhier</p>
		</body>
	</html>
';
// create a basic HTML message
$mail->IsHTML(true);
$mail->msgHTML($body);

// To make ensure that the recipient will be able to read the e-mail, even if their e-mail client doesn't support HTML, we can add a plain-text version of the message:
//Replace the plain text body with one created manually
$mail->AltBody = "C'est un plain-text message body. L'email client ne supporte pas le HTML";

//Attach an image file
$mail->addAttachment($nomFichier);

//send the message, check for errors
if (!$mail->send()) {
	echo "<div style='color:red;'>Mailer Error:" . $mail->ErrorInfo . "</div>";
} else {
	include 'remerciements.php';
}
?>